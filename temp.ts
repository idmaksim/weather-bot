import { Bot } from "grammy";
import dotenv from "dotenv";
import axios from "axios";

dotenv.config();

const bot = new Bot(process.env.BOT_TOKEN as string);
const WEATHER_API_KEY = process.env.WEATHER_API_KEY;

bot.on("message:location", async (ctx) => {
  const location = ctx.message?.location;

  try {
    const response = await axios.get(
      `https://api.openweathermap.org/data/2.5/weather?lat=${location?.latitude}&lon=${location?.longitude}&appid=${WEATHER_API_KEY}&units=metric&lang=ru`
    );

    const weather = response.data;
    const message = `
–ü–æ–≥–æ–¥–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏:
üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${Math.round(weather.main.temp)}¬∞C
üí® –í–µ—Ç–µ—Ä: ${weather.wind.speed} –º/—Å
üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${weather.main.humidity}%
üå§ ${weather.weather[0].description}
    `;

    await ctx.reply(message);
  } catch (error) {
    await ctx.reply("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ");
  }
});

bot.command("start", async (ctx) => {
  await ctx.reply(
    "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é",
    {
      reply_markup: {
        keyboard: [
          [
            {
              text: "üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é",
              request_location: true,
            },
          ],
        ],
        resize_keyboard: true,
      },
    }
  );
});

bot.start();
